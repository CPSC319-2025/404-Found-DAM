name: Build and Deploy Next.js Frontend to Azure Web App
on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      AZURE_WEBAPP_NAME: webappFrontend
      AZURE_RESOURCE_GROUP: DAM
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install
        working-directory: ./frontend

      - name: Build Next.js app
        run: npm run build
        working-directory: ./frontend

      # Create a startup script for Azure
      - name: Create startup script
        run: |
          echo '#!/bin/bash' > ./frontend/startup.sh
          echo 'cd /home/site/wwwroot' >> ./frontend/startup.sh
          echo 'npm install -g pm2@latest' >> ./frontend/startup.sh
          echo 'export PATH=$PATH:/usr/local/bin:/home/site/wwwroot/node_modules/.bin' >> ./frontend/startup.sh
          echo 'NODE_ENV=production npx next start -p 8080' >> ./frontend/startup.sh
          chmod +x ./frontend/startup.sh

      # Package deployment
      - name: Package deployment
        run: zip -r deploy.zip .
        working-directory: ./frontend

  deploy:
    runs-on: ubuntu-latest
    needs: build
    env:
      AZURE_WEBAPP_NAME: webappFrontend
      AZURE_RESOURCE_GROUP: DAM
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Package deployment
        run: zip -r deploy.zip .
        working-directory: ./frontend

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: |
            {
              "clientId": "${{ secrets.AZURE_CLIENT_ID }}",
              "clientSecret": "${{ secrets.AZURE_CLIENT_SECRET }}",
              "subscriptionId": "${{ secrets.AZURE_SUBSCRIPTION_ID }}",
              "tenantId": "${{ secrets.AZURE_TENANT_ID }}"
            }

      - name: Deploy to Azure Web App
        run: az webapp deployment source config-zip --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --name ${{ env.AZURE_WEBAPP_NAME }} --src ./frontend/deploy.zip

      # Configure the startup command
      - name: Configure startup command
        run: |
          az webapp config set --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --name ${{ env.AZURE_WEBAPP_NAME }} --startup-file /home/site/wwwroot/startup.sh
